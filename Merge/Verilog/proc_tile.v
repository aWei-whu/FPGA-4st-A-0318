// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module proc_tile (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        imgs_V_address0,
        imgs_V_ce0,
        imgs_V_q0,
        weight_1_read,
        weight_2_read,
        weight_3_read,
        weight_4_read,
        weight_5_read,
        output_0_V_address0,
        output_0_V_ce0,
        output_0_V_we0,
        output_0_V_d0,
        output_1_V_address0,
        output_1_V_ce0,
        output_1_V_we0,
        output_1_V_d0,
        output_2_V_address0,
        output_2_V_ce0,
        output_2_V_we0,
        output_2_V_d0,
        output_3_V_address0,
        output_3_V_ce0,
        output_3_V_we0,
        output_3_V_d0,
        output_4_V_address0,
        output_4_V_ce0,
        output_4_V_we0,
        output_4_V_d0,
        output_5_V_address0,
        output_5_V_ce0,
        output_5_V_we0,
        output_5_V_d0
);

parameter    ap_ST_fsm_state1 = 29'd1;
parameter    ap_ST_fsm_state2 = 29'd2;
parameter    ap_ST_fsm_state3 = 29'd4;
parameter    ap_ST_fsm_state4 = 29'd8;
parameter    ap_ST_fsm_state5 = 29'd16;
parameter    ap_ST_fsm_state6 = 29'd32;
parameter    ap_ST_fsm_state7 = 29'd64;
parameter    ap_ST_fsm_state8 = 29'd128;
parameter    ap_ST_fsm_state9 = 29'd256;
parameter    ap_ST_fsm_state10 = 29'd512;
parameter    ap_ST_fsm_state11 = 29'd1024;
parameter    ap_ST_fsm_state12 = 29'd2048;
parameter    ap_ST_fsm_state13 = 29'd4096;
parameter    ap_ST_fsm_state14 = 29'd8192;
parameter    ap_ST_fsm_state15 = 29'd16384;
parameter    ap_ST_fsm_state16 = 29'd32768;
parameter    ap_ST_fsm_state17 = 29'd65536;
parameter    ap_ST_fsm_state18 = 29'd131072;
parameter    ap_ST_fsm_state19 = 29'd262144;
parameter    ap_ST_fsm_state20 = 29'd524288;
parameter    ap_ST_fsm_state21 = 29'd1048576;
parameter    ap_ST_fsm_state22 = 29'd2097152;
parameter    ap_ST_fsm_state23 = 29'd4194304;
parameter    ap_ST_fsm_state24 = 29'd8388608;
parameter    ap_ST_fsm_state25 = 29'd16777216;
parameter    ap_ST_fsm_pp0_stage0 = 29'd33554432;
parameter    ap_ST_fsm_state68 = 29'd67108864;
parameter    ap_ST_fsm_pp1_stage0 = 29'd134217728;
parameter    ap_ST_fsm_state118 = 29'd268435456;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [10:0] imgs_V_address0;
output   imgs_V_ce0;
input  [15:0] imgs_V_q0;
input  [63:0] weight_1_read;
input  [63:0] weight_2_read;
input  [63:0] weight_3_read;
input  [63:0] weight_4_read;
input  [63:0] weight_5_read;
output  [7:0] output_0_V_address0;
output   output_0_V_ce0;
output   output_0_V_we0;
output  [15:0] output_0_V_d0;
output  [7:0] output_1_V_address0;
output   output_1_V_ce0;
output   output_1_V_we0;
output  [15:0] output_1_V_d0;
output  [7:0] output_2_V_address0;
output   output_2_V_ce0;
output   output_2_V_we0;
output  [15:0] output_2_V_d0;
output  [7:0] output_3_V_address0;
output   output_3_V_ce0;
output   output_3_V_we0;
output  [15:0] output_3_V_d0;
output  [7:0] output_4_V_address0;
output   output_4_V_ce0;
output   output_4_V_we0;
output  [15:0] output_4_V_d0;
output  [7:0] output_5_V_address0;
output   output_5_V_ce0;
output   output_5_V_we0;
output  [15:0] output_5_V_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[10:0] imgs_V_address0;
reg imgs_V_ce0;
reg output_0_V_ce0;
reg output_0_V_we0;
reg output_1_V_ce0;
reg output_1_V_we0;
reg output_2_V_ce0;
reg output_2_V_we0;
reg output_3_V_ce0;
reg output_3_V_we0;
reg output_4_V_ce0;
reg output_4_V_we0;
reg output_5_V_ce0;
reg output_5_V_we0;

(* fsm_encoding = "none" *) reg   [28:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] p_reg_253;
reg   [8:0] p_reg_253_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state26_pp0_stage0_iter0;
wire    ap_block_state27_pp0_stage0_iter1;
wire    ap_block_state28_pp0_stage0_iter2;
wire    ap_block_state29_pp0_stage0_iter3;
wire    ap_block_state30_pp0_stage0_iter4;
wire    ap_block_state31_pp0_stage0_iter5;
wire    ap_block_state32_pp0_stage0_iter6;
wire    ap_block_state33_pp0_stage0_iter7;
wire    ap_block_state34_pp0_stage0_iter8;
wire    ap_block_state35_pp0_stage0_iter9;
wire    ap_block_state36_pp0_stage0_iter10;
wire    ap_block_state37_pp0_stage0_iter11;
wire    ap_block_state38_pp0_stage0_iter12;
wire    ap_block_state39_pp0_stage0_iter13;
wire    ap_block_state40_pp0_stage0_iter14;
wire    ap_block_state41_pp0_stage0_iter15;
wire    ap_block_state42_pp0_stage0_iter16;
wire    ap_block_state43_pp0_stage0_iter17;
wire    ap_block_state44_pp0_stage0_iter18;
wire    ap_block_state45_pp0_stage0_iter19;
wire    ap_block_state46_pp0_stage0_iter20;
wire    ap_block_state47_pp0_stage0_iter21;
wire    ap_block_state48_pp0_stage0_iter22;
wire    ap_block_state49_pp0_stage0_iter23;
wire    ap_block_state50_pp0_stage0_iter24;
wire    ap_block_state51_pp0_stage0_iter25;
wire    ap_block_state52_pp0_stage0_iter26;
wire    ap_block_state53_pp0_stage0_iter27;
wire    ap_block_state54_pp0_stage0_iter28;
wire    ap_block_state55_pp0_stage0_iter29;
wire    ap_block_state56_pp0_stage0_iter30;
wire    ap_block_state57_pp0_stage0_iter31;
wire    ap_block_state58_pp0_stage0_iter32;
wire    ap_block_state59_pp0_stage0_iter33;
wire    ap_block_state60_pp0_stage0_iter34;
wire    ap_block_state61_pp0_stage0_iter35;
wire    ap_block_state62_pp0_stage0_iter36;
wire    ap_block_state63_pp0_stage0_iter37;
wire    ap_block_state64_pp0_stage0_iter38;
wire    ap_block_state65_pp0_stage0_iter39;
wire    ap_block_state66_pp0_stage0_iter40;
wire    ap_block_state67_pp0_stage0_iter41;
wire    ap_block_pp0_stage0_11001;
reg   [8:0] p_reg_253_pp0_iter2_reg;
reg   [8:0] p_reg_253_pp0_iter3_reg;
reg   [8:0] p_reg_253_pp0_iter4_reg;
reg   [8:0] p_reg_253_pp0_iter5_reg;
reg   [8:0] p_reg_253_pp0_iter6_reg;
reg   [8:0] p_reg_253_pp0_iter7_reg;
reg   [8:0] p_reg_253_pp0_iter8_reg;
reg   [8:0] p_reg_253_pp0_iter9_reg;
reg   [8:0] p_reg_253_pp0_iter10_reg;
reg   [8:0] p_reg_253_pp0_iter11_reg;
reg   [8:0] p_reg_253_pp0_iter12_reg;
reg   [8:0] p_reg_253_pp0_iter13_reg;
reg   [8:0] p_reg_253_pp0_iter14_reg;
reg   [8:0] p_reg_253_pp0_iter15_reg;
reg   [8:0] p_reg_253_pp0_iter16_reg;
reg   [8:0] p_reg_253_pp0_iter17_reg;
reg   [8:0] p_reg_253_pp0_iter18_reg;
reg   [8:0] p_reg_253_pp0_iter19_reg;
reg   [8:0] p_reg_253_pp0_iter20_reg;
reg   [8:0] p_reg_253_pp0_iter21_reg;
reg   [8:0] p_reg_253_pp0_iter22_reg;
reg   [8:0] p_reg_253_pp0_iter23_reg;
reg   [8:0] p_reg_253_pp0_iter24_reg;
reg   [8:0] p_reg_253_pp0_iter25_reg;
reg   [8:0] p_reg_253_pp0_iter26_reg;
reg   [8:0] p_reg_253_pp0_iter27_reg;
reg   [8:0] p_reg_253_pp0_iter28_reg;
reg   [8:0] p_reg_253_pp0_iter29_reg;
reg   [8:0] p_reg_253_pp0_iter30_reg;
reg   [8:0] p_reg_253_pp0_iter31_reg;
reg   [8:0] p_reg_253_pp0_iter32_reg;
reg   [8:0] p_reg_253_pp0_iter33_reg;
reg   [8:0] p_reg_253_pp0_iter34_reg;
reg   [8:0] p_reg_253_pp0_iter35_reg;
reg   [8:0] p_reg_253_pp0_iter36_reg;
reg   [8:0] p_reg_253_pp0_iter37_reg;
reg   [8:0] p_reg_253_pp0_iter38_reg;
reg   [8:0] p_reg_253_pp0_iter39_reg;
reg   [8:0] p_reg_253_pp0_iter40_reg;
reg   [10:0] indvar_flatten_reg_265;
reg   [2:0] n_reg_276;
reg   [8:0] i_reg_287;
wire    ap_block_state69_pp1_stage0_iter0;
wire    ap_block_state70_pp1_stage0_iter1;
wire    ap_block_state71_pp1_stage0_iter2;
wire    ap_block_state72_pp1_stage0_iter3;
wire    ap_block_state73_pp1_stage0_iter4;
wire    ap_block_state74_pp1_stage0_iter5;
wire    ap_block_state75_pp1_stage0_iter6;
wire    ap_block_state76_pp1_stage0_iter7;
wire    ap_block_state77_pp1_stage0_iter8;
wire    ap_block_state78_pp1_stage0_iter9;
wire    ap_block_state79_pp1_stage0_iter10;
wire    ap_block_state80_pp1_stage0_iter11;
wire    ap_block_state81_pp1_stage0_iter12;
wire    ap_block_state82_pp1_stage0_iter13;
wire    ap_block_state83_pp1_stage0_iter14;
wire    ap_block_state84_pp1_stage0_iter15;
wire    ap_block_state85_pp1_stage0_iter16;
wire    ap_block_state86_pp1_stage0_iter17;
wire    ap_block_state87_pp1_stage0_iter18;
wire    ap_block_state88_pp1_stage0_iter19;
wire    ap_block_state89_pp1_stage0_iter20;
wire    ap_block_state90_pp1_stage0_iter21;
wire    ap_block_state91_pp1_stage0_iter22;
wire    ap_block_state92_pp1_stage0_iter23;
wire    ap_block_state93_pp1_stage0_iter24;
wire    ap_block_state94_pp1_stage0_iter25;
wire    ap_block_state95_pp1_stage0_iter26;
wire    ap_block_state96_pp1_stage0_iter27;
wire    ap_block_state97_pp1_stage0_iter28;
wire    ap_block_state98_pp1_stage0_iter29;
wire    ap_block_state99_pp1_stage0_iter30;
wire    ap_block_state100_pp1_stage0_iter31;
wire    ap_block_state101_pp1_stage0_iter32;
wire    ap_block_state102_pp1_stage0_iter33;
wire    ap_block_state103_pp1_stage0_iter34;
wire    ap_block_state104_pp1_stage0_iter35;
wire    ap_block_state105_pp1_stage0_iter36;
wire    ap_block_state106_pp1_stage0_iter37;
wire    ap_block_state107_pp1_stage0_iter38;
wire    ap_block_state108_pp1_stage0_iter39;
wire    ap_block_state109_pp1_stage0_iter40;
wire    ap_block_state110_pp1_stage0_iter41;
wire    ap_block_state111_pp1_stage0_iter42;
wire    ap_block_state112_pp1_stage0_iter43;
wire    ap_block_state113_pp1_stage0_iter44;
wire    ap_block_state114_pp1_stage0_iter45;
wire    ap_block_state115_pp1_stage0_iter46;
wire    ap_block_state116_pp1_stage0_iter47;
wire    ap_block_state117_pp1_stage0_iter48;
wire    ap_block_pp1_stage0_11001;
wire   [63:0] grp_fu_314_p2;
reg   [63:0] reg_336;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state25;
reg   [15:0] reg_342;
reg    ap_enable_reg_pp0_iter1;
reg   [0:0] exitcond2_reg_1022;
reg    ap_enable_reg_pp1_iter2;
wire   [63:0] grp_fu_333_p1;
reg   [63:0] reg_346;
reg    ap_enable_reg_pp0_iter7;
reg   [0:0] exitcond2_reg_1022_pp0_iter6_reg;
reg    ap_enable_reg_pp1_iter8;
wire   [63:0] grp_fu_329_p2;
reg   [63:0] reg_352;
reg    ap_enable_reg_pp0_iter38;
reg   [0:0] exitcond2_reg_1022_pp0_iter37_reg;
reg    ap_enable_reg_pp1_iter45;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state21;
wire   [0:0] exitcond2_fu_356_p2;
reg   [0:0] exitcond2_reg_1022_pp0_iter1_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter2_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter3_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter4_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter5_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter7_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter8_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter9_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter10_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter11_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter12_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter13_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter14_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter15_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter16_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter17_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter18_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter19_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter20_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter21_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter22_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter23_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter24_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter25_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter26_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter27_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter28_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter29_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter30_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter31_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter32_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter33_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter34_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter35_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter36_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter38_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter39_reg;
reg   [0:0] exitcond2_reg_1022_pp0_iter40_reg;
wire   [8:0] p_1_fu_362_p2;
reg   [8:0] p_1_reg_1026;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] tmp_6_fu_368_p1;
wire   [63:0] reg_V_fu_373_p1;
reg   [63:0] reg_V_reg_1036;
reg   [63:0] reg_V_reg_1036_pp0_iter40_reg;
reg   [0:0] p_Result_3_reg_1042;
reg   [0:0] p_Result_3_reg_1042_pp0_iter40_reg;
wire   [15:0] tmp_19_fu_403_p1;
reg   [15:0] tmp_19_reg_1047;
reg   [15:0] tmp_19_reg_1047_pp0_iter40_reg;
wire   [0:0] tmp_s_fu_407_p2;
reg   [0:0] tmp_s_reg_1053;
reg   [0:0] tmp_s_reg_1053_pp0_iter40_reg;
wire  signed [11:0] sh_amt_fu_413_p2;
reg  signed [11:0] sh_amt_reg_1059;
wire   [0:0] tmp_2_fu_419_p2;
reg   [0:0] tmp_2_reg_1065;
reg   [0:0] tmp_2_reg_1065_pp0_iter40_reg;
wire   [0:0] tmp_7_fu_425_p2;
reg   [0:0] tmp_7_reg_1070;
wire   [0:0] tmp_8_fu_431_p2;
reg   [0:0] tmp_8_reg_1075;
reg   [0:0] tmp_8_reg_1075_pp0_iter40_reg;
wire   [0:0] sel_tmp2_demorgan_fu_437_p2;
reg   [0:0] sel_tmp2_demorgan_reg_1081;
wire   [0:0] sel_tmp3_fu_449_p2;
reg   [0:0] sel_tmp3_reg_1086;
reg   [0:0] sel_tmp3_reg_1086_pp0_iter40_reg;
wire   [15:0] sel_tmp7_fu_557_p3;
reg   [15:0] sel_tmp7_reg_1092;
wire   [0:0] exitcond_flatten_fu_632_p2;
reg   [0:0] exitcond_flatten_reg_1097;
wire    ap_CS_fsm_pp1_stage0;
wire   [10:0] indvar_flatten_next_fu_638_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [8:0] i_mid2_fu_656_p3;
reg   [8:0] i_mid2_reg_1106;
reg   [8:0] i_mid2_reg_1106_pp1_iter1_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter2_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter3_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter4_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter5_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter6_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter7_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter8_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter9_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter10_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter11_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter12_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter13_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter14_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter15_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter16_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter17_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter18_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter19_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter20_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter21_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter22_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter23_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter24_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter25_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter26_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter27_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter28_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter29_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter30_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter31_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter32_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter33_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter34_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter35_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter36_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter37_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter38_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter39_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter40_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter41_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter42_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter43_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter44_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter45_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter46_reg;
reg   [8:0] i_mid2_reg_1106_pp1_iter47_reg;
wire   [2:0] tmp_5_mid2_v_fu_664_p3;
reg   [2:0] tmp_5_mid2_v_reg_1113;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter1_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter2_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter3_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter4_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter5_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter6_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter7_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter8_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter9_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter10_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter11_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter12_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter13_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter14_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter15_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter16_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter17_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter18_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter19_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter20_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter21_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter22_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter23_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter24_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter25_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter26_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter27_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter28_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter29_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter30_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter31_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter32_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter33_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter34_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter35_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter36_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter37_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter38_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter39_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter40_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter41_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter42_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter43_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter44_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter45_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter46_reg;
reg   [2:0] tmp_5_mid2_v_reg_1113_pp1_iter47_reg;
wire   [8:0] i_1_fu_672_p2;
wire   [31:0] tmp_33_fu_716_p1;
wire   [63:0] grp_fu_324_p2;
reg   [63:0] tmp_13_reg_1134;
wire   [63:0] reg_V_1_fu_721_p1;
reg   [63:0] reg_V_1_reg_1139;
reg   [63:0] reg_V_1_reg_1139_pp1_iter47_reg;
reg   [0:0] p_Result_5_reg_1145;
reg   [0:0] p_Result_5_reg_1145_pp1_iter47_reg;
wire   [15:0] tmp_42_fu_751_p1;
reg   [15:0] tmp_42_reg_1150;
reg   [15:0] tmp_42_reg_1150_pp1_iter47_reg;
wire   [0:0] tmp_15_fu_755_p2;
reg   [0:0] tmp_15_reg_1156;
reg   [0:0] tmp_15_reg_1156_pp1_iter47_reg;
wire  signed [11:0] sh_amt_2_fu_761_p2;
reg  signed [11:0] sh_amt_2_reg_1162;
wire   [0:0] tmp_24_fu_767_p2;
reg   [0:0] tmp_24_reg_1168;
reg   [0:0] tmp_24_reg_1168_pp1_iter47_reg;
wire   [0:0] tmp_27_fu_773_p2;
reg   [0:0] tmp_27_reg_1173;
wire   [0:0] tmp_29_fu_779_p2;
reg   [0:0] tmp_29_reg_1178;
reg   [0:0] tmp_29_reg_1178_pp1_iter47_reg;
wire   [0:0] sel_tmp26_demorgan_fu_785_p2;
reg   [0:0] sel_tmp26_demorgan_reg_1184;
wire   [0:0] sel_tmp14_fu_797_p2;
reg   [0:0] sel_tmp14_reg_1189;
reg   [0:0] sel_tmp14_reg_1189_pp1_iter47_reg;
wire   [15:0] sel_tmp20_fu_905_p3;
reg   [15:0] sel_tmp20_reg_1195;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state26;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
wire    ap_CS_fsm_state68;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state69;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
reg    ap_enable_reg_pp1_iter9;
reg    ap_enable_reg_pp1_iter10;
reg    ap_enable_reg_pp1_iter11;
reg    ap_enable_reg_pp1_iter12;
reg    ap_enable_reg_pp1_iter13;
reg    ap_enable_reg_pp1_iter14;
reg    ap_enable_reg_pp1_iter15;
reg    ap_enable_reg_pp1_iter16;
reg    ap_enable_reg_pp1_iter17;
reg    ap_enable_reg_pp1_iter18;
reg    ap_enable_reg_pp1_iter19;
reg    ap_enable_reg_pp1_iter20;
reg    ap_enable_reg_pp1_iter21;
reg    ap_enable_reg_pp1_iter22;
reg    ap_enable_reg_pp1_iter23;
reg    ap_enable_reg_pp1_iter24;
reg    ap_enable_reg_pp1_iter25;
reg    ap_enable_reg_pp1_iter26;
reg    ap_enable_reg_pp1_iter27;
reg    ap_enable_reg_pp1_iter28;
reg    ap_enable_reg_pp1_iter29;
reg    ap_enable_reg_pp1_iter30;
reg    ap_enable_reg_pp1_iter31;
reg    ap_enable_reg_pp1_iter32;
reg    ap_enable_reg_pp1_iter33;
reg    ap_enable_reg_pp1_iter34;
reg    ap_enable_reg_pp1_iter35;
reg    ap_enable_reg_pp1_iter36;
reg    ap_enable_reg_pp1_iter37;
reg    ap_enable_reg_pp1_iter38;
reg    ap_enable_reg_pp1_iter39;
reg    ap_enable_reg_pp1_iter40;
reg    ap_enable_reg_pp1_iter41;
reg    ap_enable_reg_pp1_iter42;
reg    ap_enable_reg_pp1_iter43;
reg    ap_enable_reg_pp1_iter44;
reg    ap_enable_reg_pp1_iter46;
reg    ap_enable_reg_pp1_iter47;
reg    ap_enable_reg_pp1_iter48;
reg   [8:0] ap_phi_mux_p_phi_fu_257_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_n_phi_fu_280_p4;
wire    ap_block_pp1_stage0;
wire   [63:0] ap_phi_reg_pp1_iter0_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter1_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter2_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter3_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter4_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter5_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter6_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter7_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter8_i_op_assign_reg_298;
reg   [63:0] ap_phi_reg_pp1_iter9_i_op_assign_reg_298;
wire   [63:0] tmp_3_fu_564_p1;
wire  signed [63:0] tmp_33_cast_fu_711_p1;
wire   [63:0] tmp_11_fu_912_p1;
wire   [15:0] this_assign_2_1_fu_975_p3;
reg   [63:0] grp_fu_314_p0;
reg   [63:0] grp_fu_314_p1;
reg   [63:0] grp_fu_329_p0;
reg   [31:0] grp_fu_333_p0;
wire   [10:0] p_Result_s_fu_389_p4;
wire   [62:0] tmp_9_fu_377_p1;
wire   [11:0] exp_V_fu_399_p1;
wire   [0:0] sel_tmp2_fu_443_p2;
wire   [51:0] tmp_14_fu_455_p1;
wire  signed [11:0] sh_amt_1_fu_469_p2;
wire   [7:0] tmp_26_fu_478_p4;
wire  signed [31:0] sh_amt_cast_fu_466_p1;
wire   [52:0] tmp_1_fu_458_p3;
wire   [52:0] tmp_16_cast_fu_494_p1;
wire   [52:0] tmp_5_fu_498_p2;
wire   [31:0] tmp_16_fu_508_p1;
wire  signed [31:0] sh_amt_1_cast_fu_474_p1;
wire   [31:0] tmp_17_fu_511_p2;
wire   [0:0] sel_tmp4_fu_521_p2;
wire   [15:0] tmp_30_fu_504_p1;
wire   [0:0] sel_tmp10_demorgan_fu_533_p2;
wire   [0:0] icmp_fu_488_p2;
wire   [0:0] sel_tmp_fu_537_p2;
wire   [0:0] sel_tmp1_fu_543_p2;
wire   [15:0] tmp_34_fu_517_p1;
wire   [15:0] sel_tmp5_fu_525_p3;
wire   [15:0] sel_tmp6_fu_549_p3;
wire   [0:0] tmp_32_fu_569_p3;
wire   [0:0] sel_tmp8_fu_584_p2;
wire   [0:0] sel_tmp9_fu_589_p2;
wire   [15:0] tmp_10_fu_576_p3;
wire   [0:0] sel_tmp11_fu_601_p2;
wire   [0:0] sel_tmp12_fu_606_p2;
wire   [15:0] sel_tmp10_fu_594_p3;
wire   [15:0] this_assign_fu_611_p3;
wire   [15:0] tmp_18_fu_618_p2;
wire   [0:0] exitcond4_fu_650_p2;
wire   [2:0] n_1_fu_644_p2;
wire   [9:0] tmp_22_fu_688_p3;
wire   [11:0] tmp_21_fu_681_p3;
wire   [11:0] p_shl1_cast_fu_695_p1;
wire   [11:0] tmp_23_fu_699_p2;
wire   [11:0] tmp_5_mid2_cast_fu_678_p1;
wire   [11:0] tmp_25_fu_705_p2;
wire   [10:0] p_Result_4_fu_737_p4;
wire   [62:0] tmp_37_fu_725_p1;
wire   [11:0] exp_V_1_fu_747_p1;
wire   [0:0] sel_tmp13_fu_791_p2;
wire   [51:0] tmp_41_fu_803_p1;
wire  signed [11:0] sh_amt_3_fu_817_p2;
wire   [7:0] tmp_43_fu_826_p4;
wire  signed [31:0] sh_amt_2_cast_fu_814_p1;
wire   [52:0] tmp_28_fu_806_p3;
wire   [52:0] tmp_31_cast_fu_842_p1;
wire   [52:0] tmp_31_fu_846_p2;
wire   [31:0] tmp_35_fu_856_p1;
wire  signed [31:0] sh_amt_3_cast_fu_822_p1;
wire   [31:0] tmp_36_fu_859_p2;
wire   [0:0] sel_tmp15_fu_869_p2;
wire   [15:0] tmp_44_fu_852_p1;
wire   [0:0] sel_tmp34_demorgan_fu_881_p2;
wire   [0:0] icmp1_fu_836_p2;
wire   [0:0] sel_tmp17_fu_885_p2;
wire   [0:0] sel_tmp18_fu_891_p2;
wire   [15:0] tmp_46_fu_865_p1;
wire   [15:0] sel_tmp16_fu_873_p3;
wire   [15:0] sel_tmp19_fu_897_p3;
wire   [0:0] tmp_45_fu_920_p3;
wire   [0:0] sel_tmp21_fu_935_p2;
wire   [0:0] sel_tmp22_fu_940_p2;
wire   [15:0] tmp_38_fu_927_p3;
wire   [0:0] sel_tmp24_fu_952_p2;
wire   [0:0] sel_tmp25_fu_957_p2;
wire   [15:0] sel_tmp23_fu_945_p3;
wire   [15:0] this_assign_2_fu_962_p3;
wire   [15:0] tmp_39_fu_969_p2;
wire    ap_CS_fsm_state118;
reg   [28:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_condition_913;
reg    ap_condition_554;
reg    ap_condition_860;

// power-on initialization
initial begin
#0 ap_CS_fsm = 29'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp1_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter10 = 1'b0;
#0 ap_enable_reg_pp1_iter11 = 1'b0;
#0 ap_enable_reg_pp1_iter12 = 1'b0;
#0 ap_enable_reg_pp1_iter13 = 1'b0;
#0 ap_enable_reg_pp1_iter14 = 1'b0;
#0 ap_enable_reg_pp1_iter15 = 1'b0;
#0 ap_enable_reg_pp1_iter16 = 1'b0;
#0 ap_enable_reg_pp1_iter17 = 1'b0;
#0 ap_enable_reg_pp1_iter18 = 1'b0;
#0 ap_enable_reg_pp1_iter19 = 1'b0;
#0 ap_enable_reg_pp1_iter20 = 1'b0;
#0 ap_enable_reg_pp1_iter21 = 1'b0;
#0 ap_enable_reg_pp1_iter22 = 1'b0;
#0 ap_enable_reg_pp1_iter23 = 1'b0;
#0 ap_enable_reg_pp1_iter24 = 1'b0;
#0 ap_enable_reg_pp1_iter25 = 1'b0;
#0 ap_enable_reg_pp1_iter26 = 1'b0;
#0 ap_enable_reg_pp1_iter27 = 1'b0;
#0 ap_enable_reg_pp1_iter28 = 1'b0;
#0 ap_enable_reg_pp1_iter29 = 1'b0;
#0 ap_enable_reg_pp1_iter30 = 1'b0;
#0 ap_enable_reg_pp1_iter31 = 1'b0;
#0 ap_enable_reg_pp1_iter32 = 1'b0;
#0 ap_enable_reg_pp1_iter33 = 1'b0;
#0 ap_enable_reg_pp1_iter34 = 1'b0;
#0 ap_enable_reg_pp1_iter35 = 1'b0;
#0 ap_enable_reg_pp1_iter36 = 1'b0;
#0 ap_enable_reg_pp1_iter37 = 1'b0;
#0 ap_enable_reg_pp1_iter38 = 1'b0;
#0 ap_enable_reg_pp1_iter39 = 1'b0;
#0 ap_enable_reg_pp1_iter40 = 1'b0;
#0 ap_enable_reg_pp1_iter41 = 1'b0;
#0 ap_enable_reg_pp1_iter42 = 1'b0;
#0 ap_enable_reg_pp1_iter43 = 1'b0;
#0 ap_enable_reg_pp1_iter44 = 1'b0;
#0 ap_enable_reg_pp1_iter46 = 1'b0;
#0 ap_enable_reg_pp1_iter47 = 1'b0;
#0 ap_enable_reg_pp1_iter48 = 1'b0;
end

Merge_dadd_64ns_6bkb #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Merge_dadd_64ns_6bkb_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_314_p0),
    .din1(grp_fu_314_p1),
    .ce(1'b1),
    .dout(grp_fu_314_p2)
);

Merge_dmul_64ns_6cud #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Merge_dmul_64ns_6cud_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_346),
    .din1(ap_phi_reg_pp1_iter9_i_op_assign_reg_298),
    .ce(1'b1),
    .dout(grp_fu_324_p2)
);

Merge_ddiv_64ns_6fYi #(
    .ID( 1 ),
    .NUM_STAGE( 31 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
Merge_ddiv_64ns_6fYi_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_329_p0),
    .din1(reg_336),
    .ce(1'b1),
    .dout(grp_fu_329_p2)
);

Merge_uitodp_32nsg8j #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
Merge_uitodp_32nsg8j_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_333_p0),
    .ce(1'b1),
    .dout(grp_fu_333_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state26) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state26)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state26);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            ap_enable_reg_pp0_iter41 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state69) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state68)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state69)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state69);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter10 <= ap_enable_reg_pp1_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter11 <= ap_enable_reg_pp1_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter12 <= ap_enable_reg_pp1_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter13 <= ap_enable_reg_pp1_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter14 <= ap_enable_reg_pp1_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter15 <= ap_enable_reg_pp1_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter16 <= ap_enable_reg_pp1_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter17 <= ap_enable_reg_pp1_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter18 <= ap_enable_reg_pp1_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter19 <= ap_enable_reg_pp1_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter20 <= ap_enable_reg_pp1_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter21 <= ap_enable_reg_pp1_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter22 <= ap_enable_reg_pp1_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter23 <= ap_enable_reg_pp1_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter24 <= ap_enable_reg_pp1_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter25 <= ap_enable_reg_pp1_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter26 <= ap_enable_reg_pp1_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter27 <= ap_enable_reg_pp1_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter28 <= ap_enable_reg_pp1_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter29 <= ap_enable_reg_pp1_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter30 <= ap_enable_reg_pp1_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter31 <= ap_enable_reg_pp1_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter32 <= ap_enable_reg_pp1_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter33 <= ap_enable_reg_pp1_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter34 <= ap_enable_reg_pp1_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter35 <= ap_enable_reg_pp1_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter36 <= ap_enable_reg_pp1_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter37 <= ap_enable_reg_pp1_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter38 <= ap_enable_reg_pp1_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter39 <= ap_enable_reg_pp1_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter40 <= ap_enable_reg_pp1_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter41 <= ap_enable_reg_pp1_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter42 <= ap_enable_reg_pp1_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter43 <= ap_enable_reg_pp1_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter44 <= ap_enable_reg_pp1_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter45 <= ap_enable_reg_pp1_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter46 <= ap_enable_reg_pp1_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter47 <= ap_enable_reg_pp1_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter48 <= ap_enable_reg_pp1_iter47;
        end else if ((1'b1 == ap_CS_fsm_state68)) begin
            ap_enable_reg_pp1_iter48 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_554)) begin
        if ((1'b1 == ap_condition_913)) begin
            ap_phi_reg_pp1_iter1_i_op_assign_reg_298 <= weight_5_read;
        end else if (((tmp_5_mid2_v_fu_664_p3 == 3'd4) & (exitcond_flatten_fu_632_p2 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_i_op_assign_reg_298 <= weight_4_read;
        end else if (((tmp_5_mid2_v_fu_664_p3 == 3'd3) & (exitcond_flatten_fu_632_p2 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_i_op_assign_reg_298 <= weight_3_read;
        end else if (((tmp_5_mid2_v_fu_664_p3 == 3'd2) & (exitcond_flatten_fu_632_p2 == 1'd0))) begin
            ap_phi_reg_pp1_iter1_i_op_assign_reg_298 <= weight_2_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter1_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter0_i_op_assign_reg_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_860)) begin
        if (((tmp_5_mid2_v_reg_1113 == 3'd1) & (exitcond_flatten_reg_1097 == 1'd0))) begin
            ap_phi_reg_pp1_iter2_i_op_assign_reg_298 <= weight_1_read;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp1_iter2_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter1_i_op_assign_reg_298;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        i_reg_287 <= 9'd0;
    end else if (((exitcond_flatten_fu_632_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_reg_287 <= i_1_fu_672_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        indvar_flatten_reg_265 <= 11'd0;
    end else if (((exitcond_flatten_fu_632_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar_flatten_reg_265 <= indvar_flatten_next_fu_638_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state68)) begin
        n_reg_276 <= 3'd1;
    end else if (((exitcond_flatten_reg_1097 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        n_reg_276 <= tmp_5_mid2_v_reg_1113;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        p_reg_253 <= 9'd0;
    end else if (((exitcond2_reg_1022 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_reg_253 <= p_1_reg_1026;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        ap_phi_reg_pp1_iter3_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter2_i_op_assign_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        ap_phi_reg_pp1_iter4_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter3_i_op_assign_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter4 == 1'b1))) begin
        ap_phi_reg_pp1_iter5_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter4_i_op_assign_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter5 == 1'b1))) begin
        ap_phi_reg_pp1_iter6_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter5_i_op_assign_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter6 == 1'b1))) begin
        ap_phi_reg_pp1_iter7_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter6_i_op_assign_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter7 == 1'b1))) begin
        ap_phi_reg_pp1_iter8_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter7_i_op_assign_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
        ap_phi_reg_pp1_iter9_i_op_assign_reg_298 <= ap_phi_reg_pp1_iter8_i_op_assign_reg_298;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond2_reg_1022 <= exitcond2_fu_356_p2;
        exitcond2_reg_1022_pp0_iter1_reg <= exitcond2_reg_1022;
        p_reg_253_pp0_iter1_reg <= p_reg_253;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        exitcond2_reg_1022_pp0_iter10_reg <= exitcond2_reg_1022_pp0_iter9_reg;
        exitcond2_reg_1022_pp0_iter11_reg <= exitcond2_reg_1022_pp0_iter10_reg;
        exitcond2_reg_1022_pp0_iter12_reg <= exitcond2_reg_1022_pp0_iter11_reg;
        exitcond2_reg_1022_pp0_iter13_reg <= exitcond2_reg_1022_pp0_iter12_reg;
        exitcond2_reg_1022_pp0_iter14_reg <= exitcond2_reg_1022_pp0_iter13_reg;
        exitcond2_reg_1022_pp0_iter15_reg <= exitcond2_reg_1022_pp0_iter14_reg;
        exitcond2_reg_1022_pp0_iter16_reg <= exitcond2_reg_1022_pp0_iter15_reg;
        exitcond2_reg_1022_pp0_iter17_reg <= exitcond2_reg_1022_pp0_iter16_reg;
        exitcond2_reg_1022_pp0_iter18_reg <= exitcond2_reg_1022_pp0_iter17_reg;
        exitcond2_reg_1022_pp0_iter19_reg <= exitcond2_reg_1022_pp0_iter18_reg;
        exitcond2_reg_1022_pp0_iter20_reg <= exitcond2_reg_1022_pp0_iter19_reg;
        exitcond2_reg_1022_pp0_iter21_reg <= exitcond2_reg_1022_pp0_iter20_reg;
        exitcond2_reg_1022_pp0_iter22_reg <= exitcond2_reg_1022_pp0_iter21_reg;
        exitcond2_reg_1022_pp0_iter23_reg <= exitcond2_reg_1022_pp0_iter22_reg;
        exitcond2_reg_1022_pp0_iter24_reg <= exitcond2_reg_1022_pp0_iter23_reg;
        exitcond2_reg_1022_pp0_iter25_reg <= exitcond2_reg_1022_pp0_iter24_reg;
        exitcond2_reg_1022_pp0_iter26_reg <= exitcond2_reg_1022_pp0_iter25_reg;
        exitcond2_reg_1022_pp0_iter27_reg <= exitcond2_reg_1022_pp0_iter26_reg;
        exitcond2_reg_1022_pp0_iter28_reg <= exitcond2_reg_1022_pp0_iter27_reg;
        exitcond2_reg_1022_pp0_iter29_reg <= exitcond2_reg_1022_pp0_iter28_reg;
        exitcond2_reg_1022_pp0_iter2_reg <= exitcond2_reg_1022_pp0_iter1_reg;
        exitcond2_reg_1022_pp0_iter30_reg <= exitcond2_reg_1022_pp0_iter29_reg;
        exitcond2_reg_1022_pp0_iter31_reg <= exitcond2_reg_1022_pp0_iter30_reg;
        exitcond2_reg_1022_pp0_iter32_reg <= exitcond2_reg_1022_pp0_iter31_reg;
        exitcond2_reg_1022_pp0_iter33_reg <= exitcond2_reg_1022_pp0_iter32_reg;
        exitcond2_reg_1022_pp0_iter34_reg <= exitcond2_reg_1022_pp0_iter33_reg;
        exitcond2_reg_1022_pp0_iter35_reg <= exitcond2_reg_1022_pp0_iter34_reg;
        exitcond2_reg_1022_pp0_iter36_reg <= exitcond2_reg_1022_pp0_iter35_reg;
        exitcond2_reg_1022_pp0_iter37_reg <= exitcond2_reg_1022_pp0_iter36_reg;
        exitcond2_reg_1022_pp0_iter38_reg <= exitcond2_reg_1022_pp0_iter37_reg;
        exitcond2_reg_1022_pp0_iter39_reg <= exitcond2_reg_1022_pp0_iter38_reg;
        exitcond2_reg_1022_pp0_iter3_reg <= exitcond2_reg_1022_pp0_iter2_reg;
        exitcond2_reg_1022_pp0_iter40_reg <= exitcond2_reg_1022_pp0_iter39_reg;
        exitcond2_reg_1022_pp0_iter4_reg <= exitcond2_reg_1022_pp0_iter3_reg;
        exitcond2_reg_1022_pp0_iter5_reg <= exitcond2_reg_1022_pp0_iter4_reg;
        exitcond2_reg_1022_pp0_iter6_reg <= exitcond2_reg_1022_pp0_iter5_reg;
        exitcond2_reg_1022_pp0_iter7_reg <= exitcond2_reg_1022_pp0_iter6_reg;
        exitcond2_reg_1022_pp0_iter8_reg <= exitcond2_reg_1022_pp0_iter7_reg;
        exitcond2_reg_1022_pp0_iter9_reg <= exitcond2_reg_1022_pp0_iter8_reg;
        p_Result_3_reg_1042_pp0_iter40_reg <= p_Result_3_reg_1042;
        p_reg_253_pp0_iter10_reg <= p_reg_253_pp0_iter9_reg;
        p_reg_253_pp0_iter11_reg <= p_reg_253_pp0_iter10_reg;
        p_reg_253_pp0_iter12_reg <= p_reg_253_pp0_iter11_reg;
        p_reg_253_pp0_iter13_reg <= p_reg_253_pp0_iter12_reg;
        p_reg_253_pp0_iter14_reg <= p_reg_253_pp0_iter13_reg;
        p_reg_253_pp0_iter15_reg <= p_reg_253_pp0_iter14_reg;
        p_reg_253_pp0_iter16_reg <= p_reg_253_pp0_iter15_reg;
        p_reg_253_pp0_iter17_reg <= p_reg_253_pp0_iter16_reg;
        p_reg_253_pp0_iter18_reg <= p_reg_253_pp0_iter17_reg;
        p_reg_253_pp0_iter19_reg <= p_reg_253_pp0_iter18_reg;
        p_reg_253_pp0_iter20_reg <= p_reg_253_pp0_iter19_reg;
        p_reg_253_pp0_iter21_reg <= p_reg_253_pp0_iter20_reg;
        p_reg_253_pp0_iter22_reg <= p_reg_253_pp0_iter21_reg;
        p_reg_253_pp0_iter23_reg <= p_reg_253_pp0_iter22_reg;
        p_reg_253_pp0_iter24_reg <= p_reg_253_pp0_iter23_reg;
        p_reg_253_pp0_iter25_reg <= p_reg_253_pp0_iter24_reg;
        p_reg_253_pp0_iter26_reg <= p_reg_253_pp0_iter25_reg;
        p_reg_253_pp0_iter27_reg <= p_reg_253_pp0_iter26_reg;
        p_reg_253_pp0_iter28_reg <= p_reg_253_pp0_iter27_reg;
        p_reg_253_pp0_iter29_reg <= p_reg_253_pp0_iter28_reg;
        p_reg_253_pp0_iter2_reg <= p_reg_253_pp0_iter1_reg;
        p_reg_253_pp0_iter30_reg <= p_reg_253_pp0_iter29_reg;
        p_reg_253_pp0_iter31_reg <= p_reg_253_pp0_iter30_reg;
        p_reg_253_pp0_iter32_reg <= p_reg_253_pp0_iter31_reg;
        p_reg_253_pp0_iter33_reg <= p_reg_253_pp0_iter32_reg;
        p_reg_253_pp0_iter34_reg <= p_reg_253_pp0_iter33_reg;
        p_reg_253_pp0_iter35_reg <= p_reg_253_pp0_iter34_reg;
        p_reg_253_pp0_iter36_reg <= p_reg_253_pp0_iter35_reg;
        p_reg_253_pp0_iter37_reg <= p_reg_253_pp0_iter36_reg;
        p_reg_253_pp0_iter38_reg <= p_reg_253_pp0_iter37_reg;
        p_reg_253_pp0_iter39_reg <= p_reg_253_pp0_iter38_reg;
        p_reg_253_pp0_iter3_reg <= p_reg_253_pp0_iter2_reg;
        p_reg_253_pp0_iter40_reg <= p_reg_253_pp0_iter39_reg;
        p_reg_253_pp0_iter4_reg <= p_reg_253_pp0_iter3_reg;
        p_reg_253_pp0_iter5_reg <= p_reg_253_pp0_iter4_reg;
        p_reg_253_pp0_iter6_reg <= p_reg_253_pp0_iter5_reg;
        p_reg_253_pp0_iter7_reg <= p_reg_253_pp0_iter6_reg;
        p_reg_253_pp0_iter8_reg <= p_reg_253_pp0_iter7_reg;
        p_reg_253_pp0_iter9_reg <= p_reg_253_pp0_iter8_reg;
        reg_V_reg_1036_pp0_iter40_reg <= reg_V_reg_1036;
        sel_tmp3_reg_1086_pp0_iter40_reg <= sel_tmp3_reg_1086;
        tmp_19_reg_1047_pp0_iter40_reg <= tmp_19_reg_1047;
        tmp_2_reg_1065_pp0_iter40_reg <= tmp_2_reg_1065;
        tmp_8_reg_1075_pp0_iter40_reg <= tmp_8_reg_1075;
        tmp_s_reg_1053_pp0_iter40_reg <= tmp_s_reg_1053;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        exitcond_flatten_reg_1097 <= exitcond_flatten_fu_632_p2;
        i_mid2_reg_1106_pp1_iter1_reg <= i_mid2_reg_1106;
        tmp_5_mid2_v_reg_1113_pp1_iter1_reg <= tmp_5_mid2_v_reg_1113;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_632_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i_mid2_reg_1106 <= i_mid2_fu_656_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        i_mid2_reg_1106_pp1_iter10_reg <= i_mid2_reg_1106_pp1_iter9_reg;
        i_mid2_reg_1106_pp1_iter11_reg <= i_mid2_reg_1106_pp1_iter10_reg;
        i_mid2_reg_1106_pp1_iter12_reg <= i_mid2_reg_1106_pp1_iter11_reg;
        i_mid2_reg_1106_pp1_iter13_reg <= i_mid2_reg_1106_pp1_iter12_reg;
        i_mid2_reg_1106_pp1_iter14_reg <= i_mid2_reg_1106_pp1_iter13_reg;
        i_mid2_reg_1106_pp1_iter15_reg <= i_mid2_reg_1106_pp1_iter14_reg;
        i_mid2_reg_1106_pp1_iter16_reg <= i_mid2_reg_1106_pp1_iter15_reg;
        i_mid2_reg_1106_pp1_iter17_reg <= i_mid2_reg_1106_pp1_iter16_reg;
        i_mid2_reg_1106_pp1_iter18_reg <= i_mid2_reg_1106_pp1_iter17_reg;
        i_mid2_reg_1106_pp1_iter19_reg <= i_mid2_reg_1106_pp1_iter18_reg;
        i_mid2_reg_1106_pp1_iter20_reg <= i_mid2_reg_1106_pp1_iter19_reg;
        i_mid2_reg_1106_pp1_iter21_reg <= i_mid2_reg_1106_pp1_iter20_reg;
        i_mid2_reg_1106_pp1_iter22_reg <= i_mid2_reg_1106_pp1_iter21_reg;
        i_mid2_reg_1106_pp1_iter23_reg <= i_mid2_reg_1106_pp1_iter22_reg;
        i_mid2_reg_1106_pp1_iter24_reg <= i_mid2_reg_1106_pp1_iter23_reg;
        i_mid2_reg_1106_pp1_iter25_reg <= i_mid2_reg_1106_pp1_iter24_reg;
        i_mid2_reg_1106_pp1_iter26_reg <= i_mid2_reg_1106_pp1_iter25_reg;
        i_mid2_reg_1106_pp1_iter27_reg <= i_mid2_reg_1106_pp1_iter26_reg;
        i_mid2_reg_1106_pp1_iter28_reg <= i_mid2_reg_1106_pp1_iter27_reg;
        i_mid2_reg_1106_pp1_iter29_reg <= i_mid2_reg_1106_pp1_iter28_reg;
        i_mid2_reg_1106_pp1_iter2_reg <= i_mid2_reg_1106_pp1_iter1_reg;
        i_mid2_reg_1106_pp1_iter30_reg <= i_mid2_reg_1106_pp1_iter29_reg;
        i_mid2_reg_1106_pp1_iter31_reg <= i_mid2_reg_1106_pp1_iter30_reg;
        i_mid2_reg_1106_pp1_iter32_reg <= i_mid2_reg_1106_pp1_iter31_reg;
        i_mid2_reg_1106_pp1_iter33_reg <= i_mid2_reg_1106_pp1_iter32_reg;
        i_mid2_reg_1106_pp1_iter34_reg <= i_mid2_reg_1106_pp1_iter33_reg;
        i_mid2_reg_1106_pp1_iter35_reg <= i_mid2_reg_1106_pp1_iter34_reg;
        i_mid2_reg_1106_pp1_iter36_reg <= i_mid2_reg_1106_pp1_iter35_reg;
        i_mid2_reg_1106_pp1_iter37_reg <= i_mid2_reg_1106_pp1_iter36_reg;
        i_mid2_reg_1106_pp1_iter38_reg <= i_mid2_reg_1106_pp1_iter37_reg;
        i_mid2_reg_1106_pp1_iter39_reg <= i_mid2_reg_1106_pp1_iter38_reg;
        i_mid2_reg_1106_pp1_iter3_reg <= i_mid2_reg_1106_pp1_iter2_reg;
        i_mid2_reg_1106_pp1_iter40_reg <= i_mid2_reg_1106_pp1_iter39_reg;
        i_mid2_reg_1106_pp1_iter41_reg <= i_mid2_reg_1106_pp1_iter40_reg;
        i_mid2_reg_1106_pp1_iter42_reg <= i_mid2_reg_1106_pp1_iter41_reg;
        i_mid2_reg_1106_pp1_iter43_reg <= i_mid2_reg_1106_pp1_iter42_reg;
        i_mid2_reg_1106_pp1_iter44_reg <= i_mid2_reg_1106_pp1_iter43_reg;
        i_mid2_reg_1106_pp1_iter45_reg <= i_mid2_reg_1106_pp1_iter44_reg;
        i_mid2_reg_1106_pp1_iter46_reg <= i_mid2_reg_1106_pp1_iter45_reg;
        i_mid2_reg_1106_pp1_iter47_reg <= i_mid2_reg_1106_pp1_iter46_reg;
        i_mid2_reg_1106_pp1_iter4_reg <= i_mid2_reg_1106_pp1_iter3_reg;
        i_mid2_reg_1106_pp1_iter5_reg <= i_mid2_reg_1106_pp1_iter4_reg;
        i_mid2_reg_1106_pp1_iter6_reg <= i_mid2_reg_1106_pp1_iter5_reg;
        i_mid2_reg_1106_pp1_iter7_reg <= i_mid2_reg_1106_pp1_iter6_reg;
        i_mid2_reg_1106_pp1_iter8_reg <= i_mid2_reg_1106_pp1_iter7_reg;
        i_mid2_reg_1106_pp1_iter9_reg <= i_mid2_reg_1106_pp1_iter8_reg;
        p_Result_5_reg_1145 <= reg_V_1_fu_721_p1[32'd63];
        p_Result_5_reg_1145_pp1_iter47_reg <= p_Result_5_reg_1145;
        reg_V_1_reg_1139 <= reg_V_1_fu_721_p1;
        reg_V_1_reg_1139_pp1_iter47_reg <= reg_V_1_reg_1139;
        sel_tmp14_reg_1189 <= sel_tmp14_fu_797_p2;
        sel_tmp14_reg_1189_pp1_iter47_reg <= sel_tmp14_reg_1189;
        sel_tmp20_reg_1195 <= sel_tmp20_fu_905_p3;
        sel_tmp26_demorgan_reg_1184 <= sel_tmp26_demorgan_fu_785_p2;
        sh_amt_2_reg_1162 <= sh_amt_2_fu_761_p2;
        tmp_13_reg_1134 <= grp_fu_324_p2;
        tmp_15_reg_1156 <= tmp_15_fu_755_p2;
        tmp_15_reg_1156_pp1_iter47_reg <= tmp_15_reg_1156;
        tmp_24_reg_1168 <= tmp_24_fu_767_p2;
        tmp_24_reg_1168_pp1_iter47_reg <= tmp_24_reg_1168;
        tmp_27_reg_1173 <= tmp_27_fu_773_p2;
        tmp_29_reg_1178 <= tmp_29_fu_779_p2;
        tmp_29_reg_1178_pp1_iter47_reg <= tmp_29_reg_1178;
        tmp_42_reg_1150 <= tmp_42_fu_751_p1;
        tmp_42_reg_1150_pp1_iter47_reg <= tmp_42_reg_1150;
        tmp_5_mid2_v_reg_1113_pp1_iter10_reg <= tmp_5_mid2_v_reg_1113_pp1_iter9_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter11_reg <= tmp_5_mid2_v_reg_1113_pp1_iter10_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter12_reg <= tmp_5_mid2_v_reg_1113_pp1_iter11_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter13_reg <= tmp_5_mid2_v_reg_1113_pp1_iter12_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter14_reg <= tmp_5_mid2_v_reg_1113_pp1_iter13_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter15_reg <= tmp_5_mid2_v_reg_1113_pp1_iter14_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter16_reg <= tmp_5_mid2_v_reg_1113_pp1_iter15_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter17_reg <= tmp_5_mid2_v_reg_1113_pp1_iter16_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter18_reg <= tmp_5_mid2_v_reg_1113_pp1_iter17_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter19_reg <= tmp_5_mid2_v_reg_1113_pp1_iter18_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter20_reg <= tmp_5_mid2_v_reg_1113_pp1_iter19_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter21_reg <= tmp_5_mid2_v_reg_1113_pp1_iter20_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter22_reg <= tmp_5_mid2_v_reg_1113_pp1_iter21_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter23_reg <= tmp_5_mid2_v_reg_1113_pp1_iter22_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter24_reg <= tmp_5_mid2_v_reg_1113_pp1_iter23_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter25_reg <= tmp_5_mid2_v_reg_1113_pp1_iter24_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter26_reg <= tmp_5_mid2_v_reg_1113_pp1_iter25_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter27_reg <= tmp_5_mid2_v_reg_1113_pp1_iter26_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter28_reg <= tmp_5_mid2_v_reg_1113_pp1_iter27_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter29_reg <= tmp_5_mid2_v_reg_1113_pp1_iter28_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter2_reg <= tmp_5_mid2_v_reg_1113_pp1_iter1_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter30_reg <= tmp_5_mid2_v_reg_1113_pp1_iter29_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter31_reg <= tmp_5_mid2_v_reg_1113_pp1_iter30_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter32_reg <= tmp_5_mid2_v_reg_1113_pp1_iter31_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter33_reg <= tmp_5_mid2_v_reg_1113_pp1_iter32_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter34_reg <= tmp_5_mid2_v_reg_1113_pp1_iter33_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter35_reg <= tmp_5_mid2_v_reg_1113_pp1_iter34_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter36_reg <= tmp_5_mid2_v_reg_1113_pp1_iter35_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter37_reg <= tmp_5_mid2_v_reg_1113_pp1_iter36_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter38_reg <= tmp_5_mid2_v_reg_1113_pp1_iter37_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter39_reg <= tmp_5_mid2_v_reg_1113_pp1_iter38_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter3_reg <= tmp_5_mid2_v_reg_1113_pp1_iter2_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter40_reg <= tmp_5_mid2_v_reg_1113_pp1_iter39_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter41_reg <= tmp_5_mid2_v_reg_1113_pp1_iter40_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter42_reg <= tmp_5_mid2_v_reg_1113_pp1_iter41_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter43_reg <= tmp_5_mid2_v_reg_1113_pp1_iter42_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter44_reg <= tmp_5_mid2_v_reg_1113_pp1_iter43_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter45_reg <= tmp_5_mid2_v_reg_1113_pp1_iter44_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter46_reg <= tmp_5_mid2_v_reg_1113_pp1_iter45_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter47_reg <= tmp_5_mid2_v_reg_1113_pp1_iter46_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter4_reg <= tmp_5_mid2_v_reg_1113_pp1_iter3_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter5_reg <= tmp_5_mid2_v_reg_1113_pp1_iter4_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter6_reg <= tmp_5_mid2_v_reg_1113_pp1_iter5_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter7_reg <= tmp_5_mid2_v_reg_1113_pp1_iter6_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter8_reg <= tmp_5_mid2_v_reg_1113_pp1_iter7_reg;
        tmp_5_mid2_v_reg_1113_pp1_iter9_reg <= tmp_5_mid2_v_reg_1113_pp1_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_1_reg_1026 <= p_1_fu_362_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1022_pp0_iter38_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        p_Result_3_reg_1042 <= reg_V_fu_373_p1[32'd63];
        reg_V_reg_1036 <= reg_V_fu_373_p1;
        sel_tmp2_demorgan_reg_1081 <= sel_tmp2_demorgan_fu_437_p2;
        sel_tmp3_reg_1086 <= sel_tmp3_fu_449_p2;
        sh_amt_reg_1059 <= sh_amt_fu_413_p2;
        tmp_19_reg_1047 <= tmp_19_fu_403_p1;
        tmp_2_reg_1065 <= tmp_2_fu_419_p2;
        tmp_7_reg_1070 <= tmp_7_fu_425_p2;
        tmp_8_reg_1075 <= tmp_8_fu_431_p2;
        tmp_s_reg_1053 <= tmp_s_fu_407_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state5))) begin
        reg_336 <= grp_fu_314_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((exitcond2_reg_1022 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_342 <= imgs_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1)) | ((exitcond2_reg_1022_pp0_iter6_reg == 1'd0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_346 <= grp_fu_333_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter45 == 1'b1)) | ((exitcond2_reg_1022_pp0_iter37_reg == 1'd0) & (ap_enable_reg_pp0_iter38 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        reg_352 <= grp_fu_329_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_1022_pp0_iter39_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sel_tmp7_reg_1092 <= sel_tmp7_fu_557_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten_fu_632_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_5_mid2_v_reg_1113 <= tmp_5_mid2_v_fu_664_p3;
    end
end

always @ (*) begin
    if ((exitcond2_fu_356_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state26 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state26 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten_fu_632_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state69 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state69 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state118) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0) & (ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter48 == 1'b0) & (ap_enable_reg_pp1_iter47 == 1'b0) & (ap_enable_reg_pp1_iter46 == 1'b0) & (ap_enable_reg_pp1_iter44 == 1'b0) & (ap_enable_reg_pp1_iter43 == 1'b0) & (ap_enable_reg_pp1_iter42 == 1'b0) & (ap_enable_reg_pp1_iter41 == 1'b0) & (ap_enable_reg_pp1_iter40 == 1'b0) & (ap_enable_reg_pp1_iter39 == 1'b0) & (ap_enable_reg_pp1_iter38 == 1'b0) & (ap_enable_reg_pp1_iter37 == 1'b0) & (ap_enable_reg_pp1_iter36 == 1'b0) & (ap_enable_reg_pp1_iter35 == 1'b0) & (ap_enable_reg_pp1_iter34 == 1'b0) & (ap_enable_reg_pp1_iter33 == 1'b0) & (ap_enable_reg_pp1_iter32 == 1'b0) & (ap_enable_reg_pp1_iter31 == 1'b0) & (ap_enable_reg_pp1_iter30 == 1'b0) & (ap_enable_reg_pp1_iter29 == 1'b0) & (ap_enable_reg_pp1_iter28 == 1'b0) & (ap_enable_reg_pp1_iter27 == 1'b0) & (ap_enable_reg_pp1_iter26 == 1'b0) & (ap_enable_reg_pp1_iter25 == 1'b0) & (ap_enable_reg_pp1_iter24 == 1'b0) & (ap_enable_reg_pp1_iter23 == 1'b0) & (ap_enable_reg_pp1_iter22 == 1'b0) & (ap_enable_reg_pp1_iter21 == 1'b0) & (ap_enable_reg_pp1_iter20 == 1'b0) & (ap_enable_reg_pp1_iter19 == 1'b0) & (ap_enable_reg_pp1_iter18 == 1'b0) & (ap_enable_reg_pp1_iter17 == 1'b0) & (ap_enable_reg_pp1_iter16 == 1'b0) & (ap_enable_reg_pp1_iter15 == 1'b0) & (ap_enable_reg_pp1_iter14 == 1'b0) & (ap_enable_reg_pp1_iter13 == 1'b0) & (ap_enable_reg_pp1_iter12 == 1'b0) & (ap_enable_reg_pp1_iter11 == 1'b0) & (ap_enable_reg_pp1_iter10 == 1'b0) & (ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter45 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (exitcond_flatten_reg_1097 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_n_phi_fu_280_p4 = tmp_5_mid2_v_reg_1113;
    end else begin
        ap_phi_mux_n_phi_fu_280_p4 = n_reg_276;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond2_reg_1022 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_p_phi_fu_257_p4 = p_1_reg_1026;
    end else begin
        ap_phi_mux_p_phi_fu_257_p4 = p_reg_253;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state118)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_314_p0 = reg_336;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_314_p0 = weight_1_read;
    end else begin
        grp_fu_314_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_fu_314_p1 = weight_5_read;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_fu_314_p1 = weight_4_read;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_fu_314_p1 = weight_3_read;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_314_p1 = weight_2_read;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_fu_314_p1 = 64'd0;
    end else begin
        grp_fu_314_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter15 == 1'b1))) begin
        grp_fu_329_p0 = tmp_13_reg_1134;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
        grp_fu_329_p0 = reg_346;
    end else begin
        grp_fu_329_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter3 == 1'b1))) begin
        grp_fu_333_p0 = tmp_33_fu_716_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        grp_fu_333_p0 = tmp_6_fu_368_p1;
    end else begin
        grp_fu_333_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        imgs_V_address0 = tmp_33_cast_fu_711_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        imgs_V_address0 = 64'd1536;
    end else begin
        imgs_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        imgs_V_ce0 = 1'b1;
    end else begin
        imgs_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter41 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_V_ce0 = 1'b1;
    end else begin
        output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_1022_pp0_iter40_reg == 1'd0) & (ap_enable_reg_pp0_iter41 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_0_V_we0 = 1'b1;
    end else begin
        output_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_1_V_ce0 = 1'b1;
    end else begin
        output_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_1_V_we0 = 1'b1;
    end else begin
        output_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_2_V_ce0 = 1'b1;
    end else begin
        output_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_2_V_we0 = 1'b1;
    end else begin
        output_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_3_V_ce0 = 1'b1;
    end else begin
        output_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_3_V_we0 = 1'b1;
    end else begin
        output_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_4_V_ce0 = 1'b1;
    end else begin
        output_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_4_V_we0 = 1'b1;
    end else begin
        output_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_5_V_ce0 = 1'b1;
    end else begin
        output_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~(tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd1) & ~(tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd2) & ~(tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd3) & ~(tmp_5_mid2_v_reg_1113_pp1_iter47_reg == 3'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter48 == 1'b1))) begin
        output_5_V_we0 = 1'b1;
    end else begin
        output_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond2_fu_356_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter40 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter41 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter40 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter41 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond2_fu_356_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state68;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_flatten_fu_632_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter47 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter48 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter47 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter48 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_flatten_fu_632_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state118;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state118 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state118 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state68 = ap_CS_fsm[32'd26];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state100_pp1_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state101_pp1_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state102_pp1_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state103_pp1_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state104_pp1_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state105_pp1_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state106_pp1_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state107_pp1_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state108_pp1_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state109_pp1_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state110_pp1_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state111_pp1_stage0_iter42 = ~(1'b1 == 1'b1);

assign ap_block_state112_pp1_stage0_iter43 = ~(1'b1 == 1'b1);

assign ap_block_state113_pp1_stage0_iter44 = ~(1'b1 == 1'b1);

assign ap_block_state114_pp1_stage0_iter45 = ~(1'b1 == 1'b1);

assign ap_block_state115_pp1_stage0_iter46 = ~(1'b1 == 1'b1);

assign ap_block_state116_pp1_stage0_iter47 = ~(1'b1 == 1'b1);

assign ap_block_state117_pp1_stage0_iter48 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage0_iter36 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage0_iter37 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage0_iter38 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter39 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage0_iter40 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage0_iter41 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp1_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp1_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp1_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp1_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp1_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp1_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp1_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp1_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp1_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp1_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp1_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp1_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp1_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp1_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state93_pp1_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state94_pp1_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state95_pp1_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state96_pp1_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state97_pp1_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state98_pp1_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state99_pp1_stage0_iter30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_554 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_860 = ((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

always @ (*) begin
    ap_condition_913 = (~(tmp_5_mid2_v_fu_664_p3 == 3'd1) & ~(tmp_5_mid2_v_fu_664_p3 == 3'd4) & ~(tmp_5_mid2_v_fu_664_p3 == 3'd3) & ~(tmp_5_mid2_v_fu_664_p3 == 3'd2) & (exitcond_flatten_fu_632_p2 == 1'd0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_phi_reg_pp1_iter0_i_op_assign_reg_298 = 'bx;

assign exitcond2_fu_356_p2 = ((ap_phi_mux_p_phi_fu_257_p4 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond4_fu_650_p2 = ((i_reg_287 == 9'd256) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_632_p2 = ((indvar_flatten_reg_265 == 11'd1280) ? 1'b1 : 1'b0);

assign exp_V_1_fu_747_p1 = p_Result_4_fu_737_p4;

assign exp_V_fu_399_p1 = p_Result_s_fu_389_p4;

assign i_1_fu_672_p2 = (i_mid2_fu_656_p3 + 9'd1);

assign i_mid2_fu_656_p3 = ((exitcond4_fu_650_p2[0:0] === 1'b1) ? 9'd0 : i_reg_287);

assign icmp1_fu_836_p2 = (($signed(tmp_43_fu_826_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign icmp_fu_488_p2 = (($signed(tmp_26_fu_478_p4) < $signed(8'd1)) ? 1'b1 : 1'b0);

assign indvar_flatten_next_fu_638_p2 = (indvar_flatten_reg_265 + 11'd1);

assign n_1_fu_644_p2 = (ap_phi_mux_n_phi_fu_280_p4 + 3'd1);

assign output_0_V_address0 = tmp_3_fu_564_p1;

assign output_0_V_d0 = ((p_Result_3_reg_1042_pp0_iter40_reg[0:0] === 1'b1) ? tmp_18_fu_618_p2 : this_assign_fu_611_p3);

assign output_1_V_address0 = tmp_11_fu_912_p1;

assign output_1_V_d0 = this_assign_2_1_fu_975_p3;

assign output_2_V_address0 = tmp_11_fu_912_p1;

assign output_2_V_d0 = this_assign_2_1_fu_975_p3;

assign output_3_V_address0 = tmp_11_fu_912_p1;

assign output_3_V_d0 = this_assign_2_1_fu_975_p3;

assign output_4_V_address0 = tmp_11_fu_912_p1;

assign output_4_V_d0 = this_assign_2_1_fu_975_p3;

assign output_5_V_address0 = tmp_11_fu_912_p1;

assign output_5_V_d0 = this_assign_2_1_fu_975_p3;

assign p_1_fu_362_p2 = (ap_phi_mux_p_phi_fu_257_p4 + 9'd1);

assign p_Result_4_fu_737_p4 = {{reg_V_1_fu_721_p1[62:52]}};

assign p_Result_s_fu_389_p4 = {{reg_V_fu_373_p1[62:52]}};

assign p_shl1_cast_fu_695_p1 = tmp_22_fu_688_p3;

assign reg_V_1_fu_721_p1 = reg_352;

assign reg_V_fu_373_p1 = reg_352;

assign sel_tmp10_demorgan_fu_533_p2 = (tmp_7_reg_1070 | sel_tmp2_demorgan_reg_1081);

assign sel_tmp10_fu_594_p3 = ((sel_tmp9_fu_589_p2[0:0] === 1'b1) ? tmp_10_fu_576_p3 : sel_tmp7_reg_1092);

assign sel_tmp11_fu_601_p2 = (tmp_s_reg_1053_pp0_iter40_reg ^ 1'd1);

assign sel_tmp12_fu_606_p2 = (tmp_2_reg_1065_pp0_iter40_reg & sel_tmp11_fu_601_p2);

assign sel_tmp13_fu_791_p2 = (sel_tmp26_demorgan_fu_785_p2 ^ 1'd1);

assign sel_tmp14_fu_797_p2 = (tmp_27_fu_773_p2 & sel_tmp13_fu_791_p2);

assign sel_tmp15_fu_869_p2 = (tmp_29_reg_1178 & sel_tmp14_reg_1189);

assign sel_tmp16_fu_873_p3 = ((sel_tmp15_fu_869_p2[0:0] === 1'b1) ? tmp_44_fu_852_p1 : 16'd0);

assign sel_tmp17_fu_885_p2 = (sel_tmp34_demorgan_fu_881_p2 ^ 1'd1);

assign sel_tmp18_fu_891_p2 = (sel_tmp17_fu_885_p2 & icmp1_fu_836_p2);

assign sel_tmp19_fu_897_p3 = ((sel_tmp18_fu_891_p2[0:0] === 1'b1) ? tmp_46_fu_865_p1 : sel_tmp16_fu_873_p3);

assign sel_tmp1_fu_543_p2 = (sel_tmp_fu_537_p2 & icmp_fu_488_p2);

assign sel_tmp20_fu_905_p3 = ((tmp_15_reg_1156[0:0] === 1'b1) ? 16'd0 : sel_tmp19_fu_897_p3);

assign sel_tmp21_fu_935_p2 = (tmp_29_reg_1178_pp1_iter47_reg ^ 1'd1);

assign sel_tmp22_fu_940_p2 = (sel_tmp21_fu_935_p2 & sel_tmp14_reg_1189_pp1_iter47_reg);

assign sel_tmp23_fu_945_p3 = ((sel_tmp22_fu_940_p2[0:0] === 1'b1) ? tmp_38_fu_927_p3 : sel_tmp20_reg_1195);

assign sel_tmp24_fu_952_p2 = (tmp_15_reg_1156_pp1_iter47_reg ^ 1'd1);

assign sel_tmp25_fu_957_p2 = (tmp_24_reg_1168_pp1_iter47_reg & sel_tmp24_fu_952_p2);

assign sel_tmp26_demorgan_fu_785_p2 = (tmp_24_fu_767_p2 | tmp_15_fu_755_p2);

assign sel_tmp2_demorgan_fu_437_p2 = (tmp_s_fu_407_p2 | tmp_2_fu_419_p2);

assign sel_tmp2_fu_443_p2 = (sel_tmp2_demorgan_fu_437_p2 ^ 1'd1);

assign sel_tmp34_demorgan_fu_881_p2 = (tmp_27_reg_1173 | sel_tmp26_demorgan_reg_1184);

assign sel_tmp3_fu_449_p2 = (tmp_7_fu_425_p2 & sel_tmp2_fu_443_p2);

assign sel_tmp4_fu_521_p2 = (tmp_8_reg_1075 & sel_tmp3_reg_1086);

assign sel_tmp5_fu_525_p3 = ((sel_tmp4_fu_521_p2[0:0] === 1'b1) ? tmp_30_fu_504_p1 : 16'd0);

assign sel_tmp6_fu_549_p3 = ((sel_tmp1_fu_543_p2[0:0] === 1'b1) ? tmp_34_fu_517_p1 : sel_tmp5_fu_525_p3);

assign sel_tmp7_fu_557_p3 = ((tmp_s_reg_1053[0:0] === 1'b1) ? 16'd0 : sel_tmp6_fu_549_p3);

assign sel_tmp8_fu_584_p2 = (tmp_8_reg_1075_pp0_iter40_reg ^ 1'd1);

assign sel_tmp9_fu_589_p2 = (sel_tmp8_fu_584_p2 & sel_tmp3_reg_1086_pp0_iter40_reg);

assign sel_tmp_fu_537_p2 = (sel_tmp10_demorgan_fu_533_p2 ^ 1'd1);

assign sh_amt_1_cast_fu_474_p1 = sh_amt_1_fu_469_p2;

assign sh_amt_1_fu_469_p2 = ($signed(12'd0) - $signed(sh_amt_reg_1059));

assign sh_amt_2_cast_fu_814_p1 = sh_amt_2_reg_1162;

assign sh_amt_2_fu_761_p2 = (12'd1075 - exp_V_1_fu_747_p1);

assign sh_amt_3_cast_fu_822_p1 = sh_amt_3_fu_817_p2;

assign sh_amt_3_fu_817_p2 = ($signed(12'd0) - $signed(sh_amt_2_reg_1162));

assign sh_amt_cast_fu_466_p1 = sh_amt_reg_1059;

assign sh_amt_fu_413_p2 = (12'd1075 - exp_V_fu_399_p1);

assign this_assign_2_1_fu_975_p3 = ((p_Result_5_reg_1145_pp1_iter47_reg[0:0] === 1'b1) ? tmp_39_fu_969_p2 : this_assign_2_fu_962_p3);

assign this_assign_2_fu_962_p3 = ((sel_tmp25_fu_957_p2[0:0] === 1'b1) ? tmp_42_reg_1150_pp1_iter47_reg : sel_tmp23_fu_945_p3);

assign this_assign_fu_611_p3 = ((sel_tmp12_fu_606_p2[0:0] === 1'b1) ? tmp_19_reg_1047_pp0_iter40_reg : sel_tmp10_fu_594_p3);

assign tmp_10_fu_576_p3 = ((tmp_32_fu_569_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign tmp_11_fu_912_p1 = i_mid2_reg_1106_pp1_iter47_reg;

assign tmp_14_fu_455_p1 = reg_V_reg_1036[51:0];

assign tmp_15_fu_755_p2 = ((tmp_37_fu_725_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_16_cast_fu_494_p1 = $unsigned(sh_amt_cast_fu_466_p1);

assign tmp_16_fu_508_p1 = tmp_19_reg_1047;

assign tmp_17_fu_511_p2 = tmp_16_fu_508_p1 << sh_amt_1_cast_fu_474_p1;

assign tmp_18_fu_618_p2 = (16'd0 - this_assign_fu_611_p3);

assign tmp_19_fu_403_p1 = reg_V_fu_373_p1[15:0];

assign tmp_1_fu_458_p3 = {{1'd1}, {tmp_14_fu_455_p1}};

assign tmp_21_fu_681_p3 = {{i_mid2_reg_1106}, {3'd0}};

assign tmp_22_fu_688_p3 = {{i_mid2_reg_1106}, {1'd0}};

assign tmp_23_fu_699_p2 = (tmp_21_fu_681_p3 - p_shl1_cast_fu_695_p1);

assign tmp_24_fu_767_p2 = ((p_Result_4_fu_737_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_25_fu_705_p2 = (tmp_23_fu_699_p2 + tmp_5_mid2_cast_fu_678_p1);

assign tmp_26_fu_478_p4 = {{sh_amt_1_fu_469_p2[11:4]}};

assign tmp_27_fu_773_p2 = (($signed(sh_amt_2_fu_761_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_28_fu_806_p3 = {{1'd1}, {tmp_41_fu_803_p1}};

assign tmp_29_fu_779_p2 = (($signed(sh_amt_2_fu_761_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_2_fu_419_p2 = ((p_Result_s_fu_389_p4 == 11'd1075) ? 1'b1 : 1'b0);

assign tmp_30_fu_504_p1 = tmp_5_fu_498_p2[15:0];

assign tmp_31_cast_fu_842_p1 = $unsigned(sh_amt_2_cast_fu_814_p1);

assign tmp_31_fu_846_p2 = tmp_28_fu_806_p3 >> tmp_31_cast_fu_842_p1;

assign tmp_32_fu_569_p3 = reg_V_reg_1036_pp0_iter40_reg[32'd63];

assign tmp_33_cast_fu_711_p1 = $signed(tmp_25_fu_705_p2);

assign tmp_33_fu_716_p1 = reg_342;

assign tmp_34_fu_517_p1 = tmp_17_fu_511_p2[15:0];

assign tmp_35_fu_856_p1 = tmp_42_reg_1150;

assign tmp_36_fu_859_p2 = tmp_35_fu_856_p1 << sh_amt_3_cast_fu_822_p1;

assign tmp_37_fu_725_p1 = reg_V_1_fu_721_p1[62:0];

assign tmp_38_fu_927_p3 = ((tmp_45_fu_920_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign tmp_39_fu_969_p2 = (16'd0 - this_assign_2_fu_962_p3);

assign tmp_3_fu_564_p1 = p_reg_253_pp0_iter40_reg;

assign tmp_41_fu_803_p1 = reg_V_1_reg_1139[51:0];

assign tmp_42_fu_751_p1 = reg_V_1_fu_721_p1[15:0];

assign tmp_43_fu_826_p4 = {{sh_amt_3_fu_817_p2[11:4]}};

assign tmp_44_fu_852_p1 = tmp_31_fu_846_p2[15:0];

assign tmp_45_fu_920_p3 = reg_V_1_reg_1139_pp1_iter47_reg[32'd63];

assign tmp_46_fu_865_p1 = tmp_36_fu_859_p2[15:0];

assign tmp_5_fu_498_p2 = tmp_1_fu_458_p3 >> tmp_16_cast_fu_494_p1;

assign tmp_5_mid2_cast_fu_678_p1 = tmp_5_mid2_v_reg_1113;

assign tmp_5_mid2_v_fu_664_p3 = ((exitcond4_fu_650_p2[0:0] === 1'b1) ? n_1_fu_644_p2 : ap_phi_mux_n_phi_fu_280_p4);

assign tmp_6_fu_368_p1 = reg_342;

assign tmp_7_fu_425_p2 = (($signed(sh_amt_fu_413_p2) > $signed(12'd0)) ? 1'b1 : 1'b0);

assign tmp_8_fu_431_p2 = (($signed(sh_amt_fu_413_p2) < $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_9_fu_377_p1 = reg_V_fu_373_p1[62:0];

assign tmp_s_fu_407_p2 = ((tmp_9_fu_377_p1 == 63'd0) ? 1'b1 : 1'b0);

endmodule //proc_tile
